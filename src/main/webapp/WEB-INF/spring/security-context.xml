<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied"
		class="org.joonzis.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess"
		class="org.joonzis.security.CustomLoginSuccessHandler"></bean>
	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="customUserDetailService"
		class="org.joonzis.security.CustomUserDetailService"></bean>

	<!-- http 관련 인증 -->
	<security:http auto-config="true">
		<!-- 검증할게 없는 all의 경우 명시하지 않아도 무방하다. -->
		<security:intercept-url pattern="/sample/all"
			access="permitAll" />
		<security:intercept-url pattern="/sample/admin"
			access="hasRole('ADMIN_ROLE')" />

		<security:form-login login-page="/login"
			authentication-success-handler-ref="customLoginSuccess" />

		<security:logout logout-url="/customLogout"
			invalidate-session="true"
			delete-cookies="remember-me" 
			logout-success-url="/"/>

		<!-- 뭔가 에러가 떴을때 요청할 url -->
		<!-- 주석처리 된 핸들러 : 컨트롤러로 즉시 이동 / ref : 원하는 위치의 bean을 생성 후 그곳을 참조하여 이동 -->
		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler
			ref="customAccessDenied" />

		<security:csrf disabled="true" />
		
		<!-- 자동로그인 -->
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
	</security:http>

	<!-- 유저 관련 인증 -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailService">
			<!-- <security:user-service> <security:user name="member" password="{noop}member" 
				authorities="ROLE_MEMBER"/> <security:user name="admin" password="{noop}admin" 
				authorities="ROLE_ADMIN, ROLE_MEMBER"/> </security:user-service> -->

			<!-- <security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select userid, userpw, enabled from tbl_member where userid=?"
				authorities-by-username-query="select userid, auth from tbl_member_auth where userid=?" 
			/> -->
			
			
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
