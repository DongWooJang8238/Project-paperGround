<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.joonzis.mapper.UserMapper">

	<!-- 단일 아이디 (중복체크 검사) -->
	<select id="selectUsername" parameterType="String"
		resultType="int">
		select count(*) from tbl_user where userId = #{userId}
	</select>

	<!-- 아이디&비밀번호 검색 -->
	<select id="selectUserPw"
		parameterType="org.joonzis.domain.UserVO" resultType="int">
		select count(*)
		from tbl_user where userId = #{userId} and userPw = #{userPw}
	</select>

	<!-- 아이디 검색 -->
	<select id="selectUserId" parameterType="String"
		resultType="org.joonzis.domain.UserVO">
		select * from tbl_user where userId = #{userId}
	</select>

	<!-- 회원가입 데이터 등록 -->
	<insert id="signup_insert"
		parameterType="org.joonzis.domain.UserVO">
		insert into tbl_user
		(mno,username,userid,userpw,useremail,USERROLE,nickname,registerdate)
		values
		(MNO_SEQ.nextval,#{userName},#{userId},#{userPw},#{userEmail},'USER_ROLE',USERNAME_SEQ.nextval,sysdate)
	</insert>

	<!-- 아이디 찾기 -->
	<select id="findUserId"
		parameterType="org.joonzis.domain.UserVO" resultType="int">
		select count(*)
		from tbl_user where userName = #{userName} and userEmail =
		#{userEmail}
	</select>

	<!-- 아이디 검색 출력 -->
	<select id="selectUserIdByEmail"
		parameterType="org.joonzis.domain.UserVO"
		resultType="org.joonzis.domain.UserVO">
		select * from tbl_user where userName = #{userName} and
		userEmail = #{userEmail}
	</select>

	<!-- 비밀번호 찾기 출력 ( 아이디/이메일 인증번호 보내기 전 ) -->
	<select id="findUserIdEmail"
		parameterType="org.joonzis.domain.UserVO"
		resultType="org.joonzis.domain.UserVO">
		select * from tbl_user where userId = #{userId} and
		userEmail = #{userEmail}
	</select>

	<!-- 새비밀번호 설정 -->
	<update id="updatePw" parameterType="org.joonzis.domain.UserVO">
		update tbl_user
		set userPw =
		#{userPw}
		where userId = #{userId}
	</update>

	<!-- 아이콘 업데이트 -->
	<update id="updateIcon"
		parameterType="org.joonzis.domain.UserVO">
		update tbl_user
		set
		userIcon = #{userIcon}
		where USERID =
		#{userId}
	</update>

	<!-- 비밀번호 재확인 -->
	<select id="checkPassword"
		parameterType="org.joonzis.domain.UserVO"
		resultType="org.joonzis.domain.UserVO">
		select * from tbl_user where userid = #{userId} and userpw
		= #{userPw}
	</select>

	<!--유저 정보 업데이트 -->
	<update id="updateUserInfo"
		parameterType="org.joonzis.domain.UserVO">
		UPDATE tbl_user
		SET
		useremail = #{userEmail}, address = #{address}, streetAddress =
		#{streetAddress} , detailAddress = #{detailAddress} , userphonenumber
		= #{userPhonenumber}, userdate = #{userDate}
		WHERE userId = #{userId}
	</update>

	<!-- 유저 정보 검색 (by.mno) -->
	<select id="userSelectOne" parameterType="int"
		resultType="org.joonzis.domain.UserVO">
		select * from tbl_user where mno = #{mno}
	</select>

	<!-- 유저 탈퇴 -->
	<delete id="deleteAccount" parameterType="String">
		delete from tbl_user
		where userId = #{userId}
	</delete>

	<!-- 포인트 총 내역 -->
	<select id="selectPoint" parameterType="int"
		resultType="org.joonzis.domain.UserpointVO">
		select * from tbl_pointhistory where mno = #{mno} order by
		pointgetdate desc
	</select>

	<!-- 포인트 한달간 총 보유량 -->
	<select id="totalPoint" parameterType="int" resultType="int">
		SELECT
		SUM(point)
		FROM tbl_pointhistory
		WHERE mno = #{mno }
		AND status = '적립'
		AND pointgetdate
		BETWEEN
		TRUNC (sysdate -32)
		AND sysdate
	</select>

	<!-- 포인트 한달간 총 사용량 -->
	<select id="totalUsePoint" parameterType="int" resultType="int">
		SELECT
		SUM(point)
		FROM tbl_pointhistory
		WHERE mno = #{mno }
		AND status = '사용'
		AND pointgetdate
		BETWEEN
		TRUNC (sysdate -32)
		AND sysdate
	</select>

	<select id="usedBook_select" parameterType="int"
		resultType="org.joonzis.domain.UsedBookVO">
		SELECT
		*
		FROM
		tbl_ubook
		WHERE
		mno = #{mno}
	</select>

	<!-- 전체 책 리스트 조회 -->
	<select id="getuBookList" parameterType="org.joonzis.domain.Criteria" resultType="org.joonzis.domain.UsedBookVO">
	<![CDATA[
		SELECT ubno, mno, gno, ubookPrice, title, content, ubookImage, status, ubookDate
		FROM (
			SELECT ROWNUM rn, ubno, mno, gno, ubookPrice, title, content, ubookImage, status, ubookDate 
			FROM (
				SELECT * FROM tbl_ubook 
				ORDER BY ubno DESC
			)
			WHERE ROWNUM <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum} - 1) * #{amount}
		AND mno = #{userMno}
	]]>
	</select>

	<select id="countGetuBookList" parameterType="org.joonzis.domain.Criteria" resultType="int">
		SELECT count(*) FROM tbl_ubook 
				where mno = #{userMno}
				<choose>
					<when test="startDate != null and endDate != null">
						AND ubookdate BETWEEN #{startDate} AND #{endDate}
					</when>
					<when test="filterType == 0">
						AND status = 0
					</when>
					<when test="filterType == 1">
						AND status >= 1
					</when>
				</choose>
				ORDER BY ubno DESC
	</select>
	
	<select id="selectGetuBookList" parameterType="org.joonzis.domain.Criteria" resultType="org.joonzis.domain.UsedBookVO">
	<![CDATA[
		SELECT ubno, mno, gno, ubookPrice, title, content, ubookImage, status, ubookDate
		FROM (
			SELECT ROWNUM rn, ubno, mno, gno, ubookPrice, title, content, ubookImage, status, ubookDate 
			FROM (
				SELECT * FROM tbl_ubook WHERE mno = #{userMno}
		AND ubookdate BETWEEN #{startDate} AND #{endDate}
				ORDER BY ubno DESC
			)
			WHERE ROWNUM <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum} - 1) * #{amount}
	]]>
	</select>
	
	<select id="selectGetuBookEndSaleList" parameterType="org.joonzis.domain.Criteria" resultType="org.joonzis.domain.UsedBookVO">
	<![CDATA[
		SELECT ubno, mno, gno, ubookPrice, title, content, ubookImage, status, ubookDate
		FROM (
			SELECT ROWNUM rn, ubno, mno, gno, ubookPrice, title, content, ubookImage, status, ubookDate 
			FROM (
				SELECT * FROM tbl_ubook 
                where status 
				]]>
				<choose>
					<when test="filterType == 0">
    	            	= #{filterType}
					</when>
					<otherwise>
	                	>= #{filterType}
					</otherwise>
				</choose>
				<![CDATA[
                AND mno = #{userMno}
			)
			WHERE ROWNUM <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum} - 1) * #{amount}
        
	]]>
	</select>
	

</mapper>
